openapi: 3.0.3
info:
  title: 'LiasonPay API Documentation'
  description: 'This documentation aims to provide all the information you need to work with our API.'
  version: 1.0.0
servers:
  -
    url: 'https://liasonpay.net'
paths:
  /api/v1/subscription/get:
    get:
      summary: 'Get a list of subscriptions'
      operationId: getAListOfSubscriptions
      description: ''
      parameters:
        -
          in: query
          name: store_id
          description: 'The ID of the store. The <code>store_id</code> of an existing record in the stores table. Must not be greater than 255 characters.'
          example: STORE_65C0279F05
          required: true
          schema:
            type: string
            description: 'The ID of the store. The <code>store_id</code> of an existing record in the stores table. Must not be greater than 255 characters.'
            example: STORE_65C0279F05
            nullable: false
        -
          in: query
          name: subscription_id
          description: 'The ID of the subscription. The <code>subscription_id</code> of an existing record in the subscriptions table. Must not be greater than 255 characters.'
          example: SUBSCRIPTION_56FBC7EEE4
          required: false
          schema:
            type: string
            description: 'The ID of the subscription. The <code>subscription_id</code> of an existing record in the subscriptions table. Must not be greater than 255 characters.'
            example: SUBSCRIPTION_56FBC7EEE4
            nullable: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'Subscriptions retrieved successfully'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Subscriptions retrieved successfully'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
  /api/v1/subscription/create:
    post:
      summary: 'Create a subscription'
      operationId: createASubscription
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'Payment processed successfully'
                  data: {  }
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Payment processed successfully'
                  data:
                    type: object
                    properties: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: 'The ID of the store. The <code>store_id</code> of an existing record in the stores table. Must not be greater than 255 characters.'
                  example: STORE_123
                  nullable: false
                price_id:
                  type: string
                  description: 'The ID of the price. The <code>price_id</code> of an existing record in the prices table. Must not be greater than 255 characters.'
                  example: PRICE_ABC123
                  nullable: false
                trial_period_days:
                  type: integer
                  description: 'The number of days for the trial period. Note: Flutterwave does not support trials. Must be at least 0.'
                  example: 30
                  nullable: true
                customer:
                  type: object
                  description: 'The customer details.'
                  example: null
                  nullable: true
                  properties:
                    name:
                      type: string
                      description: 'The name of the customer. Must not be greater than 255 characters.'
                      example: 'John Doe'
                      nullable: true
                    email:
                      type: string
                      description: 'The email of the customer. Must be a valid email address. Must not be greater than 255 characters.'
                      example: john.doe@example.com
                      nullable: true
                    phone_number:
                      type: string
                      description: 'The phone number of the customer. Must not be greater than 255 characters.'
                      example: '+2348123456789'
                      nullable: true
                metadata:
                  type: object
                  description: 'The metadata of the payment.'
                  example: null
                  nullable: true
                  properties:
                    order_id:
                      type: string
                      description: 'The order ID.'
                      example: '1234567890'
                      nullable: true
                    order_code:
                      type: string
                      description: 'The order code.'
                      example: ORD_1234567890
                      nullable: true
                success_url:
                  type: string
                  description: 'The URL to redirect to after successful payment. Must be a valid URL.'
                  example: 'https://example.com/success'
                  nullable: false
                cancel_url:
                  type: string
                  description: 'The URL to redirect to after payment cancellation. Must be a valid URL.'
                  example: 'https://example.com/cancel'
                  nullable: false
                return_url:
                  type: string
                  description: 'The URL to redirect to after payment completion. Must be a valid URL.'
                  example: 'https://example.com/return'
                  nullable: true
                mode:
                  type: string
                  description: 'The mode of the payment.'
                  example: sandbox
                  nullable: false
                  enum:
                    - sandbox
                    - production
              required:
                - store_id
                - price_id
                - success_url
                - cancel_url
                - mode
  /api/v1/subscription/verify:
    post:
      summary: 'Verify a subscription'
      operationId: verifyASubscription
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'Subscription verified successfully'
                  data: {  }
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Subscription verified successfully'
                  data:
                    type: object
                    properties: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription_request_id:
                  type: string
                  description: 'The ID of the subscription request. The <code>log_id</code> of an existing record in the subscription_logs table. Must not be greater than 255 characters.'
                  example: 552852D7C8
                  nullable: false
              required:
                - subscription_request_id
  /api/v1/subscription/cancel:
    post:
      summary: 'Cancel a subscription'
      operationId: cancelASubscription
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'Subscription cancelled successfully'
                  data: {  }
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Subscription cancelled successfully'
                  data:
                    type: object
                    properties: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription_id:
                  type: string
                  description: 'The ID of the subscription. The <code>subscription_id</code> of an existing record in the subscriptions table. Must not be greater than 255 characters.'
                  example: SUBSCRIPTION_879F7492C4
                  nullable: false
                cancel_at_period_end:
                  type: boolean
                  description: 'Cancel the subscription at the end of the billing period.'
                  example: false
                  nullable: false
              required:
                - subscription_id
  /api/v1/subscription/upgrade:
    post:
      summary: 'Upgrade a subscription'
      operationId: upgradeASubscription
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'Subscription upgrade initiated successfully'
                  data: {  }
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Subscription upgrade initiated successfully'
                  data:
                    type: object
                    properties: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription_id:
                  type: string
                  description: 'The ID of the subscription to upgrade. The <code>subscription_id</code> of an existing record in the subscriptions table. Must not be greater than 255 characters.'
                  example: SUBSCRIPTION_879F7492C4
                  nullable: false
                store_id:
                  type: string
                  description: 'The ID of the store. The <code>store_id</code> of an existing record in the stores table. Must not be greater than 255 characters.'
                  example: STORE_123
                  nullable: false
                price_id:
                  type: string
                  description: 'The ID of the price to use for the upgrade. The <code>price_id</code> of an existing record in the prices table. Must not be greater than 255 characters.'
                  example: PRICE_ABC123
                  nullable: false
                metadata:
                  type: object
                  description: 'The metadata of the payment.'
                  example: null
                  nullable: true
                  properties:
                    order_id:
                      type: string
                      description: 'The order ID.'
                      example: '1234567890'
                      nullable: true
                    order_code:
                      type: string
                      description: 'The order code.'
                      example: ORD_1234567890
                      nullable: true
                mode:
                  type: string
                  description: 'The mode of the payment.'
                  example: sandbox
                  nullable: false
                  enum:
                    - sandbox
                    - production
              required:
                - subscription_id
                - store_id
                - price_id
                - mode
  /api/v1/packages/get:
    get:
      summary: 'Get a list of packages'
      operationId: getAListOfPackages
      description: ''
      parameters:
        -
          in: query
          name: store_id
          description: 'The ID of the store. The <code>store_id</code> of an existing record in the stores table. Must not be greater than 255 characters.'
          example: STORE_65C0279F05
          required: true
          schema:
            type: string
            description: 'The ID of the store. The <code>store_id</code> of an existing record in the stores table. Must not be greater than 255 characters.'
            example: STORE_65C0279F05
            nullable: false
        -
          in: query
          name: package_id
          description: 'The ID of the package. The <code>package_id</code> of an existing record in the packages table. Must not be greater than 255 characters.'
          example: PACKAGE_7CC53FC9B0
          required: false
          schema:
            type: string
            description: 'The ID of the package. The <code>package_id</code> of an existing record in the packages table. Must not be greater than 255 characters.'
            example: PACKAGE_7CC53FC9B0
            nullable: true
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'Packages retrieved successfully'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Packages retrieved successfully'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
  /api/v1/payments/process:
    post:
      summary: 'Process a payment'
      operationId: processAPayment
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'Payment processed successfully'
                  data: {  }
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Payment processed successfully'
                  data:
                    type: object
                    properties: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: 'The ID of the store. Must not be greater than 255 characters.'
                  example: STORE_1DB9B0447A
                  nullable: false
                currency:
                  type: string
                  description: 'The currency of the payment. Must not be greater than 3 characters.'
                  example: usd
                  nullable: false
                products:
                  type: array
                  description: 'The products to be purchased.'
                  example: null
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: 'The name of the product. Must not be greater than 255 characters.'
                        example: 'Product 1'
                        nullable: false
                      description:
                        type: string
                        description: 'The description of the product. Must not be greater than 500 characters.'
                        example: 'Product 1 description'
                        nullable: false
                      price:
                        type: number
                        description: 'The price of the product. Must be at least 1.'
                        example: 100.0
                        nullable: false
                      quantity:
                        type: integer
                        description: 'The quantity of the product. Must be at least 1.'
                        example: 1
                        nullable: false
                    required:
                      - name
                      - description
                      - price
                      - quantity
                customer:
                  type: object
                  description: 'The customer details.'
                  example: null
                  nullable: true
                  properties:
                    name:
                      type: string
                      description: 'The name of the customer. Must not be greater than 255 characters.'
                      example: 'John Doe'
                      nullable: true
                    email:
                      type: string
                      description: 'The email of the customer. Must be a valid email address. Must not be greater than 255 characters.'
                      example: john.doe@example.com
                      nullable: true
                    phone_number:
                      type: string
                      description: 'The phone number of the customer. Must not be greater than 255 characters.'
                      example: '+2348123456789'
                      nullable: true
                metadata:
                  type: object
                  description: 'The metadata of the payment.'
                  example: null
                  nullable: true
                  properties:
                    order_id:
                      type: string
                      description: 'The order ID.'
                      example: '1234567890'
                      nullable: true
                    order_code:
                      type: string
                      description: 'The order code.'
                      example: ORD_1234567890
                      nullable: true
                success_url:
                  type: string
                  description: 'The URL to redirect to after successful payment. Must be a valid URL.'
                  example: 'https://example.com/success'
                  nullable: false
                cancel_url:
                  type: string
                  description: 'The URL to redirect to after payment cancellation. Must be a valid URL.'
                  example: 'https://example.com/cancel'
                  nullable: false
                return_url:
                  type: string
                  description: 'The URL to redirect to after payment completion. Must be a valid URL.'
                  example: 'https://example.com/return'
                  nullable: true
                mode:
                  type: string
                  description: 'The mode of the payment.'
                  example: sandbox
                  nullable: false
                  enum:
                    - sandbox
                    - production
                coupon:
                  type: string
                  description: 'The coupon code. The <code>code</code> of an existing record in the coupons table.'
                  example: GYRPVBK06Q
                  nullable: true
              required:
                - store_id
                - currency
                - products
                - success_url
                - cancel_url
                - mode
  /api/v1/payments/verify:
    post:
      summary: 'Verify a payment'
      operationId: verifyAPayment
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'Payment verified successfully'
                  data: {  }
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Payment verified successfully'
                  data:
                    type: object
                    properties: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_id:
                  type: string
                  description: 'The ID of the transaction. The <code>transaction_id</code> of an existing record in the transactions table. Must not be greater than 255 characters.'
                  example: '1234567890'
                  nullable: false
              required:
                - transaction_id
  /api/v1/payments/tokenize/charge:
    post:
      summary: 'Charge a payment with a token'
      operationId: chargeAPaymentWithAToken
      description: ''
      parameters:
        -
          in: query
          name: store_id
          description: 'The ID of the store. Must not be greater than 255 characters.'
          example: STORE_1DB9B0447A
          required: true
          schema:
            type: string
            description: 'The ID of the store. Must not be greater than 255 characters.'
            example: STORE_1DB9B0447A
            nullable: false
        -
          in: query
          name: currency
          description: 'The currency of the payment. Must not be greater than 3 characters.'
          example: usd
          required: true
          schema:
            type: string
            description: 'The currency of the payment. Must not be greater than 3 characters.'
            example: usd
            nullable: false
        -
          in: query
          name: products
          description: 'The products to be purchased.'
          example: null
          required: true
          schema:
            type: array
            description: 'The products to be purchased.'
            example: null
            items:
              type: object
        -
          in: query
          name: customer
          description: 'The customer details.'
          example: null
          required: false
          schema:
            type: object
            description: 'The customer details.'
            example: null
            nullable: true
            properties: {  }
        -
          in: query
          name: customer.name
          description: 'The name of the customer. Must not be greater than 255 characters.'
          example: 'John Doe'
          required: false
          schema:
            type: string
            description: 'The name of the customer. Must not be greater than 255 characters.'
            example: 'John Doe'
            nullable: true
        -
          in: query
          name: customer.email
          description: 'The email of the customer. Must be a valid email address. Must not be greater than 255 characters.'
          example: john.doe@example.com
          required: false
          schema:
            type: string
            description: 'The email of the customer. Must be a valid email address. Must not be greater than 255 characters.'
            example: john.doe@example.com
            nullable: true
        -
          in: query
          name: customer.phone_number
          description: 'The phone number of the customer. Must not be greater than 255 characters.'
          example: '+2348123456789'
          required: false
          schema:
            type: string
            description: 'The phone number of the customer. Must not be greater than 255 characters.'
            example: '+2348123456789'
            nullable: true
        -
          in: query
          name: metadata
          description: 'The metadata of the payment.'
          example: null
          required: false
          schema:
            type: object
            description: 'The metadata of the payment.'
            example: null
            nullable: true
            properties: {  }
        -
          in: query
          name: metadata.order_id
          description: 'The order ID.'
          example: '1234567890'
          required: false
          schema:
            type: string
            description: 'The order ID.'
            example: '1234567890'
            nullable: true
        -
          in: query
          name: metadata.order_code
          description: 'The order code.'
          example: ORD_1234567890
          required: false
          schema:
            type: string
            description: 'The order code.'
            example: ORD_1234567890
            nullable: true
        -
          in: query
          name: success_url
          description: 'The URL to redirect to after successful payment. Must be a valid URL.'
          example: 'https://example.com/success'
          required: true
          schema:
            type: string
            description: 'The URL to redirect to after successful payment. Must be a valid URL.'
            example: 'https://example.com/success'
            nullable: false
        -
          in: query
          name: cancel_url
          description: 'The URL to redirect to after payment cancellation. Must be a valid URL.'
          example: 'https://example.com/cancel'
          required: true
          schema:
            type: string
            description: 'The URL to redirect to after payment cancellation. Must be a valid URL.'
            example: 'https://example.com/cancel'
            nullable: false
        -
          in: query
          name: return_url
          description: 'The URL to redirect to after payment completion. Must be a valid URL.'
          example: 'https://example.com/return'
          required: false
          schema:
            type: string
            description: 'The URL to redirect to after payment completion. Must be a valid URL.'
            example: 'https://example.com/return'
            nullable: true
        -
          in: query
          name: mode
          description: 'The mode of the payment.'
          example: sandbox
          required: true
          schema:
            type: string
            description: 'The mode of the payment.'
            example: sandbox
            nullable: false
            enum:
              - sandbox
              - production
        -
          in: query
          name: coupon
          description: 'The coupon code. The <code>code</code> of an existing record in the coupons table.'
          example: GYRPVBK06Q
          required: false
          schema:
            type: string
            description: 'The coupon code. The <code>code</code> of an existing record in the coupons table.'
            example: GYRPVBK06Q
            nullable: true
        -
          in: query
          name: token
          description: 'Payment token (If you want to generate a token, leave this blank).'
          example: PMTOKEN20250528133152837180817000177
          required: true
          schema:
            type: string
            description: 'Payment token (If you want to generate a token, leave this blank).'
            example: PMTOKEN20250528133152837180817000177
            nullable: false
        -
          in: query
          name: 'products[].name'
          description: 'The name of the product. Must not be greater than 255 characters.'
          example: 'Product 1'
          required: true
          schema:
            type: string
            description: 'The name of the product. Must not be greater than 255 characters.'
            example: 'Product 1'
            nullable: false
        -
          in: query
          name: 'products[].description'
          description: 'The description of the product. Must not be greater than 500 characters.'
          example: 'Product 1 description'
          required: true
          schema:
            type: string
            description: 'The description of the product. Must not be greater than 500 characters.'
            example: 'Product 1 description'
            nullable: false
        -
          in: query
          name: 'products[].price'
          description: 'The price of the product. Must be at least 1.'
          example: 100.0
          required: true
          schema:
            type: number
            description: 'The price of the product. Must be at least 1.'
            example: 100.0
            nullable: false
        -
          in: query
          name: 'products[].quantity'
          description: 'The quantity of the product. Must be at least 1.'
          example: 1
          required: true
          schema:
            type: integer
            description: 'The quantity of the product. Must be at least 1.'
            example: 1
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'Payment processed successfully'
                  data: {  }
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Payment processed successfully'
                  data:
                    type: object
                    properties: {  }
      tags:
        - Endpoints
  /api/v1/disputes/raise:
    post:
      summary: 'Raise a dispute for a transaction'
      operationId: raiseADisputeForATransaction
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                transaction_id:
                  type: string
                  description: 'The ID of the transaction. The <code>transaction_id</code> of an existing record in the transactions table. Must not be greater than 255 characters.'
                  example: TRX_1234567890
                  nullable: false
                reason:
                  type: string
                  description: 'The reason for the dispute. Must not be greater than 255 characters.'
                  example: 'Item not as described'
                  nullable: false
                description:
                  type: string
                  description: 'Detailed description of the dispute.'
                  example: 'The item was damaged and different from the listing photo.'
                  nullable: false
                attachments:
                  type: array
                  description: 'Must be a file. Must not be greater than 5120 kilobytes.'
                  items:
                    type: string
                    format: binary
                    nullable: true
                metadata:
                  type: object
                  description: 'Additional data related to the dispute in key-value format.'
                  example:
                    order_id: '12345'
                    customer_reference: CUST-001
                  nullable: true
                  properties: {  }
              required:
                - transaction_id
                - reason
                - description
  /api/v1/disputes/view:
    post:
      summary: 'Get dispute details for a transaction'
      operationId: getDisputeDetailsForATransaction
      description: ''
      parameters:
        -
          in: query
          name: dispute_id
          description: 'The ID of the dispute. The <code>dispute_id</code> of an existing record in the disputes table.'
          example: DSP_9EEC97F54D0A486383ED676DC2110E22
          required: true
          schema:
            type: string
            description: 'The ID of the dispute. The <code>dispute_id</code> of an existing record in the disputes table.'
            example: DSP_9EEC97F54D0A486383ED676DC2110E22
            nullable: false
      responses: {  }
      tags:
        - Endpoints
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: "To obtain your API key, please follow these steps:\n\n1. Log in to your [LiasonPay](https://liasonpay.test) account.\n2. Navigate to the **Dashboard**.\n3. Click on the **Profile icon** in the top right corner.\n4. Click on the **API Keys** section.\n5. Generate a new API key or copy your existing key.\n\nFor direct access, visit the [LiasonPay API Key page](https://liasonpay.test/api-key)."
security:
  -
    default: []
